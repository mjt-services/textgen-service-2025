{"version":3,"file":"toLocalTextgenFetchParams.js","sourceRoot":"","sources":["../../src/textgen/toLocalTextgenFetchParams.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,qBAAqB,EAAE,MAAM,yBAAyB,CAAC;AAIhE,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,EACxC,OAAO,EACP,OAAO,GAAG,EAAE,EACZ,GAAG,GAKJ,EAAE,EAAE;IACH,MAAM,EAAE,OAAO,EAAE,GAAG,OAAO,CAAC;IAC5B,MAAM,EACJ,SAAS,GAAG,GAAG,CAAC,eAAe,EAC/B,GAAG,GAAG,OAAO,EAAE,WAAW,KAAK,KAAK;QAClC,CAAC,CAAC,qCAAqC;QACvC,CAAC,CAAC,0CAA0C,GAC/C,GAAG,OAAO,CAAC;IAEZ,OAAO;QACL,GAAG;QACH,IAAI,EAAE,qBAAqB,CAAC,OAAO,CAAC;QACpC,SAAS;KACV,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { toTextgenExtendedBody } from \"./toTextgenExtendedBody\";\nimport type { Env } from \"../Env\";\nimport type { TextgenConnectionMap } from \"@mjt-services/textgen-common-2025\";\n\nexport const toLocalTextgenFetchParams = ({\n  request,\n  headers = {},\n  env,\n}: {\n  request: TextgenConnectionMap[\"textgen.generate\"][\"request\"];\n  headers?: TextgenConnectionMap[\"textgen.generate\"][\"headers\"];\n  env: Env;\n}) => {\n  const { options } = request;\n  const {\n    authToken = env.LOCAL_AUTHTOKEN,\n    url = options?.promptStyle === \"raw\"\n      ? \"http://10.0.0.9:5000/v1/completions\"\n      : \"http://10.0.0.9:5000/v1/chat/completions\",\n  } = headers;\n\n  return {\n    url,\n    body: toTextgenExtendedBody(request),\n    authToken,\n  };\n};\n"]}