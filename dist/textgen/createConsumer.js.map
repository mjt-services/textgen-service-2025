{"version":3,"file":"createConsumer.js","sourceRoot":"","sources":["../../src/textgen/createConsumer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;AAC/C,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAC5C,OAAO,EACL,YAAY,EACZ,iBAAiB,EACjB,2BAA2B,GAI5B,MAAM,mCAAmC,CAAC;AAE3C,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,MAAM,CAAC,MAAM,cAAc,GACzB,CAAC,EACC,MAAM,EACN,gCAAgC,EAChC,IAAI,EACJ,IAAI,GAAG,YAAY,EACnB,SAAS,GAAG,EAAE,GASf,EAAE,EAAE,CACL,KAAK,EACH,KAAuE,EACvE,IAAa,EACb,EAAE;IACF,0CAA0C;IAC1C,IAAI,CAAC;QACH,IAAI,2BAA2B,CAAC,KAAK,CAAC,EAAE,CAAC;YACvC,IAAI,SAAS,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,CAAC;gBACnC,QAAQ,CAAC,mBAAmB,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC;YACtD,CAAC;QACH,CAAC;QACD,MAAM,MAAM,GAAG,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,KAAK,GAAG,2BAA2B,CAAC,MAAM,CAAC;YAC/C,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO;YACtB,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBAC3B,CAAC,CAAC,MAAM,CAAC,IAAI;gBACb,CAAC,CAAC,SAAS,CAAC;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;QAEzB,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACnC,MAAM,CAAC,uBAAuB,EAAE,WAAW,CAAC,GAAG,OAAO,CAAC,UAAU,CAC/D,UAAU,EACV,IAAI,CACL,CAAC;QAEF,MAAM,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,GAAG,OAAO,CAAC,eAAe,CACvE,uBAAuB,EACvB,SAAS,CACV,CAAC;QAEF,IAAI,WAAW,IAAI,gBAAgB,EAAE,CAAC;YACpC,gCAAgC,CAAC,KAAK,EAAE,CAAC;YACzC,IAAI,CAAC;gBACH,KAAK,EAAE,KAAK,IAAI,SAAS;gBACzB,IAAI,EAAE,qBAAqB;gBAC3B,IAAI,EAAE,IAAI;aACX,CAAC,CAAC;YACH,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,SAAS,CAAC,uBAAuB,CAAC,EAAE,CAAC;YACvC,IAAI,CAAC;gBACH,KAAK,EAAE,KAAK,IAAI,SAAS;gBACzB,IAAI,EAAE,uBAAuB;gBAC7B,IAAI;aACL,CAAC,CAAC;QACL,CAAC;QAED,IAAI,IAAI,EAAE,CAAC;YACT,OAAO,IAAI,CAAC;QACd,CAAC;IACH,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC;IACd,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { ConnectionListener } from \"@mjt-engine/message\";\nimport { isDefined } from \"@mjt-engine/object\";\nimport { Parsers } from \"@mjt-engine/parse\";\nimport {\n  DEFAULT_STOP,\n  isOobaboogaChoice,\n  isOpenrouterStreamingChoice,\n  type OobaboogaTextgenResponse,\n  type OpenRouterTextgenResponse,\n  type TextgenConnectionMap,\n} from \"@mjt-services/textgen-common-2025\";\nimport type { Env } from \"../Env\";\nimport { logDebug } from \"./logDebug\";\n\nexport const createConsumer =\n  ({\n    buffer,\n    finishedConsumingAbortController,\n    send,\n    stop = DEFAULT_STOP,\n    stopAfter = [],\n  }: {\n    send: Parameters<\n      ConnectionListener<TextgenConnectionMap, \"textgen.generate\", Env>\n    >[0][\"send\"];\n    buffer: string[];\n    finishedConsumingAbortController: AbortController;\n    stopAfter?: string | string[];\n    stop?: string | string[];\n  }) =>\n  async (\n    value: OpenRouterTextgenResponse | OobaboogaTextgenResponse | undefined,\n    done: boolean\n  ) => {\n    // logDebug(\"consuming\", { value, done });\n    try {\n      if (isOpenrouterStreamingChoice(value)) {\n        if (isDefined(value.finish_reason)) {\n          logDebug(`finish_reason: '${value.finish_reason}'`);\n        }\n      }\n      const choice = value?.choices?.[0];\n      const delta = isOpenrouterStreamingChoice(choice)\n        ? choice.delta.content\n        : isOobaboogaChoice(choice)\n        ? choice.text\n        : undefined;\n      buffer.push(delta ?? \"\");\n\n      const bufferText = buffer.join(\"\");\n      const [fullStoppedTextFragment, fullStopped] = Parsers.detectStop(\n        bufferText,\n        stop\n      );\n\n      const [stopAfterTextFragment, stopAfterStopped] = Parsers.detectStopAfter(\n        fullStoppedTextFragment,\n        stopAfter\n      );\n\n      if (fullStopped || stopAfterStopped) {\n        finishedConsumingAbortController.abort();\n        send({\n          delta: delta ?? undefined,\n          text: stopAfterTextFragment,\n          done: true,\n        });\n        return true;\n      }\n\n      if (isDefined(fullStoppedTextFragment)) {\n        send({\n          delta: delta ?? undefined,\n          text: fullStoppedTextFragment,\n          done,\n        });\n      }\n\n      if (done) {\n        return true;\n      }\n    } catch (err) {\n      console.error(err);\n      return true;\n    }\n  };\n"]}