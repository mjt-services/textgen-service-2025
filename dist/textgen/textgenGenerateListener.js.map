{"version":3,"file":"textgenGenerateListener.js","sourceRoot":"","sources":["../../src/textgen/textgenGenerateListener.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,4BAA4B,EAAE,MAAM,gCAAgC,CAAC;AAE9E,MAAM,CAAC,MAAM,uBAAuB,GAGhC,KAAK,EAAE,KAAK,EAAE,EAAE;IAClB,2BAA2B;IAC3B,IAAI,CAAC;QACH,MAAM,EAAE,MAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC;QACrC,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,4BAA4B,CAAC,KAAK,CAAC,CAAC;QAC7C,CAAC;QACD,iDAAiD;QACjD,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;IACxB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;AACH,CAAC,CAAC","sourcesContent":["import type { ConnectionListener } from \"@mjt-engine/message\";\nimport type { TextgenConnectionMap } from \"@mjt-services/textgen-common-2025\";\nimport { sendTextgenStreamingResponse } from \"./sendTextgenStreamingResponse\";\n\nexport const textgenGenerateListener: ConnectionListener<\n  TextgenConnectionMap,\n  \"textgen.generate\"\n> = async (props) => {\n  // Add your code logic here\n  try {\n    const { stream } = props.detail.body;\n    if (stream) {\n      return sendTextgenStreamingResponse(props);\n    }\n    // return sendTextgenNonStreamingResponse(props);\n    return { done: true };\n  } catch (error) {\n    console.log(\"textgenGenerateListener error\", error);\n  }\n};\n"]}