{"version":3,"file":"toTextgenFetchParams.js","sourceRoot":"","sources":["../../src/textgen/toTextgenFetchParams.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAC;AACxE,OAAO,EAAE,8BAA8B,EAAE,MAAM,kCAAkC,CAAC;AAIlF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAAC,EACnC,OAAO,EACP,OAAO,EACP,GAAG,GAKJ,EAAE,EAAE;IACH,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE,GAAG,OAAO,CAAC;IACjC,MAAM,EAAE,QAAQ,GAAG,YAAY,EAAE,GAAG,OAAO,CAAC;IAC5C,QAAQ,QAAQ,EAAE,CAAC;QACjB,KAAK,OAAO,CAAC,CAAC,CAAC;YACb,OAAO,yBAAyB,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;QAC9D,CAAC;QACD,KAAK,YAAY,CAAC,CAAC,CAAC;YAClB,OAAO,8BAA8B,CAAC,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,CAAC,CAAC;QACnE,CAAC;IACH,CAAC;IACD,MAAM,IAAI,KAAK,CAAC,qBAAqB,QAAQ,EAAE,CAAC,CAAC;AACnD,CAAC,CAAC","sourcesContent":["import { toLocalTextgenFetchParams } from \"./toLocalTextgenFetchParams\";\nimport { toOpenRouterTextgenFetchParams } from \"./toOpenRouterTextgenFetchParams\";\nimport type { Env } from \"../Env\";\nimport type { TextgenConnectionMap } from \"@mjt-services/textgen-common-2025\";\n\nexport const toTextgenFetchParams = ({\n  request,\n  headers,\n  env,\n}: {\n  request: TextgenConnectionMap[\"textgen.generate\"][\"request\"];\n  headers?: TextgenConnectionMap[\"textgen.generate\"][\"headers\"];\n  env: Env;\n}) => {\n  const { options = {} } = request;\n  const { provider = \"openrouter\" } = options;\n  switch (provider) {\n    case \"local\": {\n      return toLocalTextgenFetchParams({ request, headers, env });\n    }\n    case \"openrouter\": {\n      return toOpenRouterTextgenFetchParams({ request, headers, env });\n    }\n  }\n  throw new Error(`unknown provider: ${provider}`);\n};\n"]}