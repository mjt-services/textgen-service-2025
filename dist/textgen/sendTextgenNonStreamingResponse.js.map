{"version":3,"file":"sendTextgenNonStreamingResponse.js","sourceRoot":"","sources":["../../src/textgen/sendTextgenNonStreamingResponse.ts"],"names":[],"mappings":";AAAA,mEAAmE;AACnE,gCAAgC;AAChC,kHAAkH;AAElH,oEAAoE;AACpE,sBAAsB;AACtB,6CAA6C;AAC7C,iEAAiE;AACjE,iDAAiD;AACjD,iDAAiD;AAEjD,oCAAoC;AACpC,sBAAsB;AACtB,cAAc;AACd,iBAAiB;AACjB,+CAA+C;AAC/C,4CAA4C;AAC5C,SAAS;AACT,YAAY;AACZ,QAAQ;AACR,oBAAoB;AACpB,wEAAwE;AACxE,MAAM;AACN,4EAA4E;AAC5E,WAAW;AACX,gCAAgC;AAChC,cAAc;AACd,QAAQ;AACR,KAAK","sourcesContent":["// import type { AppMessageListener } from \"../AppMessageListener\";\n// import { Env } from \"../Env\";\n// import type { OpenRouterTextgenResponse } from \"../app-common/3rd-party/open-router/OpenRouterTextgenResponse\";\n\n// export const sendTextgenNonStreamingResponse: AppMessageListener<\n//   \"textgen:request\"\n// > = async ({ message, signal, send }) => {\n//   const url = \"https://openrouter.ai/api/v1/chat/completions\";\n//   const authToken = Env.OPEN_ROUTER_AUTHTOKEN;\n//   const body = JSON.stringify(message.detail);\n\n//   const resp = await fetch(url, {\n//     method: \"POST\",\n//     signal,\n//     headers: {\n//       Authorization: `Bearer ${authToken} `,\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body,\n//   });\n//   if (!resp.ok) {\n//     throw new Error(`Bad response: ${resp.status}`, { cause: resp });\n//   }\n//   const detail = (await resp.json()) satisfies OpenRouterTextgenResponse;\n//   send({\n//     type: \"textgen:response\",\n//     detail,\n//   });\n// };\n"]}