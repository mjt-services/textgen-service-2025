{"version":3,"file":"TextStreamPolyfill.js","sourceRoot":"","sources":["../../src/polyfill/TextStreamPolyfill.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * TextEncoderStream polyfill based on Node.js' implementation https://github.com/nodejs/node/blob/3f3226c8e363a5f06c1e6a37abd59b6b8c1923f1/lib/internal/webstreams/encoding.js#L38-L119 (MIT License)\n */\nexport class TextEncoderStream {\n  #pendingHighSurrogate: string | null = null;\n\n  #handle = new TextEncoder();\n\n  #transform = new TransformStream<string, Uint8Array>({\n    transform: (chunk, controller) => {\n      // https://encoding.spec.whatwg.org/#encode-and-enqueue-a-chunk\n      chunk = String(chunk);\n\n      let finalChunk = \"\";\n      for (let i = 0; i < chunk.length; i++) {\n        const item = chunk[i];\n        const codeUnit = item.charCodeAt(0);\n        if (this.#pendingHighSurrogate !== null) {\n          const highSurrogate = this.#pendingHighSurrogate;\n\n          this.#pendingHighSurrogate = null;\n          if (0xdc00 <= codeUnit && codeUnit <= 0xdfff) {\n            finalChunk += highSurrogate + item;\n            continue;\n          }\n\n          finalChunk += \"\\uFFFD\";\n        }\n\n        if (0xd800 <= codeUnit && codeUnit <= 0xdbff) {\n          this.#pendingHighSurrogate = item;\n          continue;\n        }\n\n        if (0xdc00 <= codeUnit && codeUnit <= 0xdfff) {\n          finalChunk += \"\\uFFFD\";\n          continue;\n        }\n\n        finalChunk += item;\n      }\n\n      if (finalChunk) {\n        controller.enqueue(this.#handle.encode(finalChunk));\n      }\n    },\n\n    flush: (controller) => {\n      // https://encoding.spec.whatwg.org/#encode-and-flush\n      if (this.#pendingHighSurrogate !== null) {\n        controller.enqueue(new Uint8Array([0xef, 0xbf, 0xbd]));\n      }\n    },\n  });\n\n  get encoding() {\n    return this.#handle.encoding;\n  }\n\n  get readable() {\n    return this.#transform.readable;\n  }\n\n  get writable() {\n    return this.#transform.writable;\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"TextEncoderStream\";\n  }\n}\n\n/**\n * TextDecoderStream polyfill based on Node.js' implementation https://github.com/nodejs/node/blob/3f3226c8e363a5f06c1e6a37abd59b6b8c1923f1/lib/internal/webstreams/encoding.js#L121-L200 (MIT License)\n */\nexport class TextDecoderStream {\n  #handle: TextDecoder;\n\n  #transform = new TransformStream({\n    transform: (chunk, controller) => {\n      const value = this.#handle.decode(chunk, { stream: true });\n\n      if (value) {\n        controller.enqueue(value);\n      }\n    },\n    flush: (controller) => {\n      const value = this.#handle.decode();\n      if (value) {\n        controller.enqueue(value);\n      }\n\n      controller.terminate();\n    },\n  });\n\n  constructor(encoding = \"utf-8\", options: TextDecoderOptions = {}) {\n    this.#handle = new TextDecoder(encoding, options);\n  }\n\n  get encoding() {\n    return this.#handle.encoding;\n  }\n\n  get fatal() {\n    return this.#handle.fatal;\n  }\n\n  get ignoreBOM() {\n    return this.#handle.ignoreBOM;\n  }\n\n  get readable() {\n    return this.#transform.readable;\n  }\n\n  get writable() {\n    return this.#transform.writable;\n  }\n\n  get [Symbol.toStringTag]() {\n    return \"TextDecoderStream\";\n  }\n}\n"]}